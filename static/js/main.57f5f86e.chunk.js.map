{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["isStyleObject","obj","SingleOtpInput","props","_this","getClasses","classes","arguments","filter","c","join","getType","isInputSecure","isInputNum","input","React","createRef","componentDidMount","this","focus","shouldAutoFocus","inputEl","current","componentDidUpdate","prevProps","select","render","placeholder","separator","isLastChild","inputStyle","isDisabled","hasErrored","errorStyle","focusStyle","disabledStyle","index","value","className","rest","style","display","alignItems","aria-label","autoComplete","Object","assign","defaultStyle","type","maxLength","ref","disabled","PureComponent","OtpInput","state","activeInput","getOtpValue","_this2","toString","split","getPlaceholderValue","numInputs","length","console","error","handleOtpChange","otp","onChange","isInputValueValid","isNaN","parseInt","trim","focusInput","Math","max","min","setState","focusNextInput","focusPrevInput","changeCodeAtFocus","handleOnPaste","e","preventDefault","nextActiveInput","pastedData","clipboardData","getData","slice","pos","shift","handleOnChange","target","handleOnKeyDown","keyCode","key","handleOnInput","nativeEvent","data","inputType","renderInputs","inputs","dataCy","dataTestId","i","push","onKeyDown","onInput","onPaste","onFocus","onBlur","DefaultSeparator","data-cy","data-testid","_loop","containerStyle","String","Component","defaultProps","log","paddingLeft","paddingRight","textAlign","width","height","border","borderRadius","fontSize","color","outline","App","useState","setOtp","setNumInputs","numInputType","setNumInputType","setError","htmlFor","id","checked","count","onClick","alert","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.57f5f86e.chunk.js","sourcesContent":["import React, { Component, PureComponent } from 'react'\n\n// keyCode constants\nconst BACKSPACE = 8\nconst LEFT_ARROW = 37\nconst RIGHT_ARROW = 39\nconst DELETE = 46\nconst SPACEBAR = 32\n\n// Doesn't really check if it's a style Object\n// Basic implementation to check if it's not a string\n// of classNames and is an Object\n// TODO: Better implementation\nconst isStyleObject = (obj) => typeof obj === 'object'\n\nclass SingleOtpInput extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.input = React.createRef()\n  }\n\n  // Focus on first render\n  // Only when shouldAutoFocus is true\n  componentDidMount() {\n    const { focus, shouldAutoFocus } = this.props\n    const { current: inputEl } = this.input\n\n    if (inputEl && focus && shouldAutoFocus) {\n      inputEl.focus()\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { focus } = this.props\n    const { current: inputEl } = this.input\n\n    // Check if focusedInput changed\n    // Prevent calling function if input already in focus\n    if (prevProps.focus !== focus && inputEl && focus) {\n      inputEl.focus()\n      inputEl.select()\n    }\n  }\n\n  getClasses = (...classes) =>\n    classes.filter((c) => !isStyleObject(c) && c !== false).join(' ')\n\n  getType = () => {\n    const { isInputSecure, isInputNum } = this.props\n    if (isInputSecure) {\n      return 'password'\n    }\n    if (isInputNum) {\n      return 'tel'\n    }\n    return 'text'\n  }\n\n  render() {\n    const {\n      placeholder,\n      separator,\n      isLastChild,\n      inputStyle,\n      focus,\n      isDisabled,\n      hasErrored,\n      errorStyle,\n      focusStyle,\n      disabledStyle,\n      shouldAutoFocus,\n      isInputNum,\n      index,\n      value,\n      className,\n      isInputSecure,\n      ...rest\n    } = this.props\n\n    return (\n      <div\n        className={className}\n        style={{ display: 'flex', alignItems: 'center' }}\n      >\n        <input\n          aria-label={`${\n            index === 0 ? 'Please enter verification code. ' : ''\n          }${isInputNum ? 'Digit' : 'Character'} ${index + 1}`}\n          autoComplete='off'\n          style={Object.assign(\n            defaultStyle,\n            isStyleObject(inputStyle) && inputStyle,\n            focus && isStyleObject(focusStyle) && focusStyle,\n            isDisabled && isStyleObject(disabledStyle) && disabledStyle,\n            hasErrored && isStyleObject(errorStyle) && errorStyle\n          )}\n          placeholder={placeholder}\n          className={this.getClasses(\n            inputStyle,\n            focus && focusStyle,\n            isDisabled && disabledStyle,\n            hasErrored && errorStyle\n          )}\n          type={this.getType()}\n          maxLength='1'\n          ref={this.input}\n          disabled={isDisabled}\n          value={value ? value : ''}\n          {...rest}\n        />\n        {!isLastChild && separator}\n      </div>\n    )\n  }\n}\n\n/**\n * @props numInputs: number;\n * @props onChange: any;\n * @props value: string | number;\n * @props placeholder?: string;\n * @props separator?: JSX.Element;\n * @props containerStyle?: object | string;\n * @props inputStyle?: object | string;\n * @props focusStyle?: object | string;\n * @props isDisabled?: boolean;\n * @props disabledStyle?: object | string;\n * @props hasErrored?: boolean;\n * @props errorStyle?: object | string;\n * @props shouldAutoFocus?: boolean;\n * @props isInputNum?: boolean;\n * @props isInputSecure?: boolean;\n * @props className?: string;\n */\nclass OtpInput extends Component {\n  static defaultProps = {\n    numInputs: 4,\n    onChange: (otp) => console.log(otp),\n    isDisabled: false,\n    shouldAutoFocus: false,\n    value: '',\n    isInputSecure: false\n  }\n\n  state = {\n    activeInput: 0\n  }\n\n  getOtpValue = () =>\n    this.props.value ? this.props.value.toString().split('') : []\n\n  getPlaceholderValue = () => {\n    const { placeholder, numInputs } = this.props\n\n    if (typeof placeholder === 'string') {\n      if (placeholder.length === numInputs) {\n        return placeholder\n      }\n\n      if (placeholder.length > 0) {\n        console.error(\n          'Length of the placeholder should be equal to the number of inputs.'\n        )\n      }\n    }\n  }\n\n  // Helper to return OTP from input\n  handleOtpChange = (otp) => {\n    const { onChange } = this.props\n    const otpValue = otp.join('')\n\n    onChange(otpValue)\n  }\n\n  isInputValueValid = (value) => {\n    const isTypeValid = this.props.isInputNum\n      ? !isNaN(parseInt(value, 10))\n      : typeof value === 'string'\n\n    return isTypeValid && value.trim().length === 1\n  }\n\n  // Focus on input by index\n  focusInput = (input) => {\n    const { numInputs } = this.props\n    const activeInput = Math.max(Math.min(numInputs - 1, input), 0)\n\n    this.setState({ activeInput })\n  }\n\n  // Focus on next input\n  focusNextInput = () => {\n    const { activeInput } = this.state\n    this.focusInput(activeInput + 1)\n  }\n\n  // Focus on previous input\n  focusPrevInput = () => {\n    const { activeInput } = this.state\n    this.focusInput(activeInput - 1)\n  }\n\n  // Change OTP value at focused input\n  changeCodeAtFocus = (value) => {\n    const { activeInput } = this.state\n    const otp = this.getOtpValue()\n    otp[activeInput] = value[0]\n\n    this.handleOtpChange(otp)\n  }\n\n  // Handle pasted OTP\n  handleOnPaste = (e) => {\n    e.preventDefault()\n\n    const { activeInput } = this.state\n    const { numInputs, isDisabled } = this.props\n\n    if (isDisabled) {\n      return\n    }\n\n    const otp = this.getOtpValue()\n    let nextActiveInput = activeInput\n\n    // Get pastedData in an array of max size (num of inputs - current position)\n    const pastedData = e.clipboardData\n      .getData('text/plain')\n      .slice(0, numInputs - activeInput)\n      .split('')\n\n    // Paste data from focused input onwards\n    for (let pos = 0; pos < numInputs; ++pos) {\n      if (pos >= activeInput && pastedData.length > 0) {\n        otp[pos] = pastedData.shift()\n        nextActiveInput++\n      }\n    }\n\n    this.setState({ activeInput: nextActiveInput }, () => {\n      this.focusInput(nextActiveInput)\n      this.handleOtpChange(otp)\n    })\n  }\n\n  handleOnChange = (e) => {\n    const { value } = e.target\n\n    if (this.isInputValueValid(value)) {\n      this.changeCodeAtFocus(value)\n    }\n  }\n\n  // Handle cases of backspace, delete, left arrow, right arrow, space\n  handleOnKeyDown = (e) => {\n    if (e.keyCode === BACKSPACE || e.key === 'Backspace') {\n      e.preventDefault()\n      this.changeCodeAtFocus('')\n      this.focusPrevInput()\n    } else if (e.keyCode === DELETE || e.key === 'Delete') {\n      e.preventDefault()\n      this.changeCodeAtFocus('')\n    } else if (e.keyCode === LEFT_ARROW || e.key === 'ArrowLeft') {\n      e.preventDefault()\n      this.focusPrevInput()\n    } else if (e.keyCode === RIGHT_ARROW || e.key === 'ArrowRight') {\n      e.preventDefault()\n      this.focusNextInput()\n    } else if (\n      e.keyCode === SPACEBAR ||\n      e.key === ' ' ||\n      e.key === 'Spacebar' ||\n      e.key === 'Space'\n    ) {\n      e.preventDefault()\n    }\n  }\n\n  // The content may not have changed, but some input took place hence change the focus\n  handleOnInput = (e) => {\n    if (this.isInputValueValid(e.target.value)) {\n      this.focusNextInput()\n    } else {\n      // This is a workaround for dealing with keyCode \"229 Unidentified\" on Android.\n\n      if (!this.props.isInputNum) {\n        const { nativeEvent } = e\n\n        if (\n          nativeEvent.data === null &&\n          nativeEvent.inputType === 'deleteContentBackward'\n        ) {\n          e.preventDefault()\n          this.changeCodeAtFocus('')\n          this.focusPrevInput()\n        }\n      }\n    }\n  }\n\n  renderInputs = () => {\n    const { activeInput } = this.state\n    const {\n      numInputs,\n      inputStyle,\n      focusStyle,\n      separator,\n      isDisabled,\n      disabledStyle,\n      hasErrored,\n      errorStyle,\n      shouldAutoFocus,\n      isInputNum,\n      isInputSecure,\n      className\n    } = this.props\n\n    const inputs = []\n    const otp = this.getOtpValue()\n    const placeholder = this.getPlaceholderValue()\n    const dataCy = this.props['data-cy']\n    const dataTestId = this.props['data-testid']\n\n    for (let i = 0; i < numInputs; i++) {\n      inputs.push(\n        <SingleOtpInput\n          placeholder={placeholder && placeholder[i]}\n          key={i}\n          index={i}\n          focus={activeInput === i}\n          value={otp && otp[i]}\n          onChange={this.handleOnChange}\n          onKeyDown={this.handleOnKeyDown}\n          onInput={this.handleOnInput}\n          onPaste={this.handleOnPaste}\n          onFocus={(e) => {\n            this.setState({ activeInput: i })\n            e.target.select()\n          }}\n          onBlur={() => this.setState({ activeInput: -1 })}\n          separator={separator || <DefaultSeparator />}\n          inputStyle={inputStyle}\n          focusStyle={focusStyle}\n          isLastChild={i === numInputs - 1}\n          isDisabled={isDisabled}\n          disabledStyle={disabledStyle}\n          hasErrored={hasErrored}\n          errorStyle={errorStyle}\n          shouldAutoFocus={shouldAutoFocus}\n          isInputNum={isInputNum}\n          isInputSecure={isInputSecure}\n          className={className}\n          data-cy={dataCy && `${dataCy}-${i}`}\n          data-testid={dataTestId && `${dataTestId}-${i}`}\n        />\n      )\n    }\n\n    return inputs\n  }\n\n  render() {\n    const { containerStyle } = this.props\n\n    return (\n      <div\n        style={Object.assign(\n          { display: 'flex' },\n          isStyleObject(containerStyle) && containerStyle\n        )}\n        className={!isStyleObject(containerStyle) ? String(containerStyle) : ''}\n      >\n        {this.renderInputs()}\n      </div>\n    )\n  }\n}\n\nexport default OtpInput\n\nexport const DefaultSeparator = () => (\n  <span style={{ paddingLeft: '10px', paddingRight: '10px' }}></span>\n)\n\nexport const defaultStyle = {\n  textAlign: 'center',\n  width: '50px',\n  height: '40px',\n  border: '1px solid #8392a5',\n  borderRadius: '4px',\n  fontSize: '25px',\n  color: '#8392a5',\n  outline: 'none'\n}\n","import './index.css'\nimport React, { useState } from 'react'\nimport OtpInput from 'react-otp-module'\n\nconst App = () => {\n  const [otp, setOtp] = useState()\n  const [numInputs, setNumInputs] = useState(4)\n  const [numInputType, setNumInputType] = useState(true)\n  const [error, setError] = useState('')\n  const handleClear = () => {\n    setOtp('')\n    setError('')\n  }\n  const handleSubmit = () => {\n    if (String(otp)?.length != numInputs) {\n      return setError('Please enter missing OTP fileds!')\n    } else {\n      setError('')\n    }\n    alert(otp)\n  }\n  const handleChange = (e) => {\n    const count = e.target.value\n    setNumInputs(count < 1 ? 1 : count)\n  }\n  return (\n    <div className='App'>\n      <div className='card shadow p-3'>\n        <form className=''>\n          <label className='font-weight-bold' htmlFor='otp'>\n            Enter your OTP here\n          </label>\n          <br />\n          <OtpInput\n            id='otp'\n            value={otp}\n            onChange={setOtp}\n            numInputs={numInputs}\n            // separator={<span className='px-2'></span>}\n            inputStyle='otp__input'\n            placeholder={''}\n            isInputNum={numInputType}\n          />\n        </form>\n\n        <div className='pt-3'>\n          <label className='error text-danger'>{error}</label>\n        </div>\n        <div>\n          <input\n            onChange={() => setNumInputType(!numInputType)}\n            checked={numInputType}\n            type={'checkbox'}\n            id='inputType'\n          />\n          <label className='pl-2' htmlFor='inputType'>\n            Number input\n          </label>\n        </div>\n        <div>\n          <label className='pr-2' htmlFor='inputType'>\n            Number of OTP fields\n          </label>\n          <input\n            value={numInputs}\n            onChange={handleChange}\n            type={'number'}\n            style={{ width: '50px' }}\n            id='numInput'\n          />\n        </div>\n\n        <div className='pt-2'>\n          <button onClick={handleClear} className='btn btn-info mr-3'>\n            Clear\n          </button>\n          <button onClick={handleSubmit} className='btn btn-danger'>\n            Submit\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}